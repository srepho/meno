[build-system]
requires = ["setuptools>=42.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "meno"
version = "0.6.0"
description = "Topic modeling toolkit for messy text data"
readme = "README.md"
requires-python = ">=3.8,<3.13"
license = {file = "LICENSE"}
authors = [
    {name = "Stephen Oates", email = "stephen.oates@example.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]
dependencies = [
    # Core dependencies with version bounds
    "pandas>=2.0.0,<3.0.0",
    "pyarrow>=11.0.0,<15.0.0",  # Lower minimum version for better compatibility
    "scikit-learn>=1.2.0,<2.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "pyyaml>=6.0,<7.0",
    "jinja2>=3.1.2,<4.0.0",
    # Text processing
    "thefuzz>=0.20.0,<0.21.0",  # Fork of fuzzywuzzy that includes Levenshtein by default
]

[project.optional-dependencies]
# Optional embeddings dependencies (CPU only)
embeddings = [
    "sentence-transformers>=2.2.2,<3.0.0",
    "transformers>=4.28.0,<5.0.0",
    "torch>=2.0.0,<3.0.0",
]
# Optional embeddings dependencies with GPU support
embeddings-gpu = [
    "sentence-transformers>=2.2.2,<3.0.0",
    "transformers>=4.28.0,<5.0.0",
    "torch>=2.0.0,<3.0.0",
    "accelerate>=0.20.0,<1.0.0",
    "bitsandbytes>=0.41.0,<1.0.0",
]
# Optional LDA dependencies
lda = [
    "gensim>=4.3.0,<5.0.0",
]
# Optional visualization dependencies
viz = [
    "plotly>=5.14.0,<6.0.0",
    "umap-learn>=0.5.3,<0.6.0",
]
# Optional clustering dependencies
clustering = [
    "hdbscan>=0.8.29,<0.9.0",
]
# Optional NLP dependencies
nlp = [
    "spacy>=3.5.0,<4.0.0",
]
# Optional active learning dependencies
active = [
    "cleanlab>=2.3.0,<3.0.0",
]
# Optional topic modeling approaches
additional_models = [
    "bertopic>=0.15.0,<0.16.0",
    "top2vec>=1.0.27,<2.0.0",
    "nmf-topic-modeling>=0.2.0,<0.3.0",
    "contextualized-topic-models>=2.5.0,<3.0.0",
]
# Optional optimization for large datasets
optimization = [
    "polars>=1.11.0,<1.15.0",
]
# Full installation with all optional dependencies (CPU)
full = [
    "sentence-transformers>=2.2.2,<3.0.0",
    "transformers>=4.28.0,<5.0.0",
    "torch>=2.0.0,<3.0.0",
    "gensim>=4.3.0,<5.0.0",
    "plotly>=5.14.0,<6.0.0",
    "umap-learn>=0.5.3,<0.6.0",
    "hdbscan>=0.8.29,<0.9.0",
    "spacy>=3.5.0,<4.0.0",
    "cleanlab>=2.3.0,<3.0.0",
    "polars>=1.11.0,<1.15.0",
    "bertopic>=0.15.0,<0.16.0",
    "top2vec>=1.0.27,<2.0.0",
]
# Full installation with GPU support
full-gpu = [
    "sentence-transformers>=2.2.2,<3.0.0",
    "transformers>=4.28.0,<5.0.0",
    "torch>=2.0.0,<3.0.0",
    "accelerate>=0.20.0,<1.0.0",
    "bitsandbytes>=0.41.0,<1.0.0",
    "gensim>=4.3.0,<5.0.0",
    "plotly>=5.14.0,<6.0.0",
    "umap-learn>=0.5.3,<0.6.0",
    "hdbscan>=0.8.29,<0.9.0",
    "spacy>=3.5.0,<4.0.0",
    "cleanlab>=2.3.0,<3.0.0",
    "polars>=1.11.0,<1.15.0",
    "bertopic>=0.15.0,<0.16.0",
    "top2vec>=1.0.27,<2.0.0",
]
# Development dependencies split into logical groups
dev = [
    "black>=23.3.0,<24.0.0",
    "ruff>=0.0.265,<0.1.0",
    "mypy>=1.3.0,<2.0.0",
]
test = [
    "pytest>=7.3.1,<8.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "hypothesis>=6.75.0,<7.0.0",
]
docs = [
    "sphinx>=7.0.0,<8.0.0",
    "sphinx-rtd-theme>=1.2.0,<2.0.0",
    "jupyter>=1.0.0,<2.0.0",
]

[project.urls]
"Homepage" = "https://github.com/srepho/meno"
"Bug Tracker" = "https://github.com/srepho/meno/issues"

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.ruff]
line-length = 88
target-version = "py310"
select = ["E", "F", "B", "I", "UP", "N", "C4", "SIM", "ARG"]
ignore = ["E501"]  # Let black handle line length

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = ""

[tool.setuptools]
packages = [
    "meno",
    "meno.active_learning",
    "meno.modeling",
    "meno.preprocessing",
    "meno.reporting",
    "meno.utils",
    "meno.visualization"
]
package-dir = {"" = "."}
include-package-data = true

[tool.setuptools.package-data]
meno = ["config/*.yaml", "default_config.yaml"]